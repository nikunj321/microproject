 	VALIDKEY EQU 00H
	NEWKEY EQU 00H
	UPKEY EQU 0FEH
	DOWNKEY EQU 0FDH
	OKKEY EQU 0FBH
	RESETKEY EQU 0F7H
START:ORG 0000H
	MOV SP,#50H
	

	; ----READY DISPLAY---
	MOV R4,#01H		; ROMOVE ANY GARBAGE VALUE FROM R4 TO PREVENT EXTRA DELAYS IN DELAY ROUTUNE
	LCALL DELAY1
	MOV A, #38H	; INTI...LCD 2 LINE 5 *7 MATRIX
	LCALL WRTCMD
	MOV A, #0EH	; LCD ON AND CURSOR ON
	LCALL WRTCMD
	MOV A, #01H ; CLEAR LCD
	LCALL WRTCMD

	; ---- DISPLAYING MSG -----
	MOV R4,#01H
	LCALL DELAY1  
	MOV DPTR,#WLCMMSG
	LCALL DISP_MSG
	LCALL DELAY			; DELAY BETWEEN TWO MSGS
	MOV DPTR,#FNLMSG
	LCALL DISP_MSG
	LCALL DELAY
	MOV DPTR,#SLTSINE
	LCALL DISP_MSG
	LCALL DELAY
	MOV DPTR,#WV_TYPE
	LCALL DISP_MSG
	MOV A,#80H; MOVING CURSOR TO FIRST POSITION
	MOV R1,A	;CURSOR LOCATION IN R1
	LCALL WRTCMD

	;------keyboard functions--------

KBD:LCALL KEYBOARD
	MOV A,NEWKEY
	CJNE A,#RESETKEY,NXT
	LJMP START
NEXT:CJNE A,#OKKEY,NXT1
	;----- SOME LOGIC----ADD HERE
NXT1:CJNE A,DOWNKEY,NXT2
	CJNE R1,#0C0H,NX
	SJMP KBD
NX: MOV A,#0C0H
	MOV R1,A
	LCALL WRTCMD
	SJMP KBD
NXT2:CJNE A,UPKEY,
	CJNE R1,#80H,NX1
	SJMP KBD
NX1:MOV A,#80H
	MOV R1,A
	LCALL WRTCMD
	SJMP KBD

	SJMP $



;;-------------ALL CALLS ------------------------;;

WLCMMSG:DB "WELCOME TO MSU BARODA!"
FNLMSG:DB "FINAL YEAR PROJECT!"
SLTSINE:DB "SELECT WAVEFORM YOU WANT TO SEE!"
WV_TYPE:DB "1  SINE WAVE    2  3RD HARMONIC!"

	;-------KEYBOARD INTERFACING-----

KEYBOARD:MOV P1,#0FH		; MAKING AS READING PORT
WAIT:LCALL KEYSDOWN			; CHECK IF NO KEY IS PRESSED OR NOT
	JZ WAIT
	LCALL CONVERT			;CHECK FOR SINGLE KEY IS PRESSED OR NOT
	JNB VALIDKEY,WAIT
	MOV NEWKEY,A
	MOV R4,#01H			; --??? DECLARING OF NEWKEY && VALIDKEY REMAINING.
	LCALL DELAY1					; --??? DELAY FOR KEYBOARD NOISE IS REMAINIG
	LCALL KEYSDOWN
	JZ WAIT
	LCALL CONVERT
	JNB VALIDKEY,WAIT
	CJNE A,NEWKEY,WAIT
	RET

CONVERT:CLR VALIDKEY
	CLR A
	MOV A,P1
	ORL A, #0F0H
	CJNE A,	#UPKEY,CH1
	SJMP FOUND
CH1:CJNE A, #DOWNKEY,CH2
	SJMP FOUND
CH2:CJNE A, #OKKEY,CH3
	SJMP FOUND
CH3:CJNE A, #RESETKEY,CH4
FOUND:SETB VALIDKEY
CH4:RET

KEYSDOWN:MOV A,P1	; LAST 4 PIN OF THE PORT P2 FOR UP,DOWN,OKAY,RESET
	ORL A, #0F0H
	CPL A
	RET

;----delay subroutine---
DELAY:MOV R4,#3		; ADD NUMBER OF SEC 
DELAY1:MOV R5,#10	; FROM HERE ---1 SECOND DELAY
D2:	MOV R6,#200
D1:	MOV R7,#250
HERE:DJNZ R7,HERE
	DJNZ R6,D1
	DJNZ R5,D2
	DJNZ R4,DELAY1
	RET

;-----display 16 character in LCD---

DISP_MSG:MOV A,#01H		; CLEAR LCD BEFORE DISPLAYING OTHER MSG
	LCALL WRTCMD
	MOV A,#80H	; FORCE CURSOR POSITION TO FIRST
	LCALL WRTCMD
	MOV B,#16	; FOR 16 CHARACTER  IN THE MSG BODY
L1:	CLR A
	MOVC A, @A+ DPTR
	CJNE A,#21H,CON1	;COMPARING '!' WITH ASCII 21H SO THAT END OF MSG AND EXIT LOOP
	SJMP RETURN
CON1:LCALL WRT_DATA
	INC DPTR
	DJNZ B,L1	; WHEN IT EXIT 1ST LINE WILL DISPLAY 16 CHARACTER
	MOV A,#0C0H	; SENDING CURSOR TO 2ND ROW FIRST POSTION
	LCALL WRTCMD
	MOV B,#16
L2: CLR A
	MOVC A,@A+DPTR
	CJNE A,#21H,CON2	;COMPARING '!' WITH ASCII 21h
	SJMP RETURN
CON2:LCALL WRT_DATA
	INC DPTR
	DJNZ B,L2
RETURN:RET



;------command and write subroutine for LCD---

WRTCMD:LCALL ISREADY	
	MOV P0,A
	CLR P1.4	; RS = 0 FOR COMMAND
	CLR P1.3	; R/W = 0 FOR WRITTING 
	SETB P1.2	; ENABLE SIGNAL
	CLR P1.2
	RET

WRT_DATA:LCALL ISREADY
	MOV P0,A
	SETB P1.4	; RS = 1 FOR DATA
	CLR P1.3	; R/W = 0 FOR WRITTING TO DISPLAY
	SETB P1.2	;ENABLE SIGNAL
	CLR P2.2	 
	RET

;-----check if D7 bit is busy or not---

ISREADY:SETB P0.7	; READING AS INPUT BIT OR PORT
	CLR P1.4	  ; RS = 0 AS COMMAND
	SETB P1.3	; R/W = 1 FOR READING COMMAND
BUSY:CLR P1.2	; ENABLE SIGNAL
	SETB P1.2
	JB P0.7,BUSY
	CLR P1.2
	RET

	END
